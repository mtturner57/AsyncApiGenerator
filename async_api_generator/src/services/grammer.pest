// This isn't workign but im not giving up on it yet. Keeping it here for now
file_path = { path ~ "/" ~ filename ~ "." ~ extension }
path = @{ (ASCII_ALPHA | ASCII_DIGIT | "/" | "_" | "-" | "..")* } // Matches the file path
filename = @{ (ASCII_ALPHA | ASCII_DIGIT | "/" | "_" | "-")* }
extension = @{ ASCII_ALPHA+ } // Matches the file extension\

async_version = { "asyncapi: \'" ~ version ~ "\'" }
version = @{ ASCII_DIGIT+ ~ ASCII_DIGIT+ ~ ASCII_DIGIT+ }


/*
Storing for laters, how to do multiple matches, will be good for yaml parser
 pair = { KEY ~ "=" ~ VALUE ~ ("," ~ pair)* }
 file = { pair* }
for pair in pairs.into_inner() {
    if let Rule::pair = pair.as_rule() {
        let mut inner = pair.into_inner();
        let key = inner.next().unwrap().as_str();
        let value = inner.next().unwrap().as_str();
        println!("Key: {}, Value: {}", key, value);
    }
}*/